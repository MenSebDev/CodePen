@use '../../styles/utilities.scss' as *;
@import '../../styles/index.scss';

// @include crosshair();

@keyframes rotate {
    to {
        transform: rotatez(1turn);
    }
}

$space: 1.618deg;
$percent: calc(#{var(--angle)} - #{$space});

$size-box: size(box);
$size-cover: size(cover);
$size-eye: size(eye);
$size-sun: size(sun);
$size-ray: size(ray);
$size-gap: to-length(var(--distance));

$color-background: color(background);
$color-fill: color(fill);
$color-stroke: color(stroke);
$color-hover: color(hover);

$angle-ray: angle(ray);
$angle-line: angle(line);

.kosmos {
    width: 100%;
    height: 100%;
    background: $color-background;

    &,
    * {
        @extend %flex-3D;
        position: absolute;
    }

    .box {
        width: $size-box;
        height: $size-box;
        pointer-events: all;
        border-radius: 50%;

        * {
            pointer-events: none;
        }

        &::before {
            content: '';
            width: 100%;
            height: 100%;
            position: absolute;
            border-radius: 50%;
            background: $color-fill;
        }

        &::after {
            content: '';
            position: absolute;
            width: calc($size-cover / 2);
            height: $size-cover;
            right: 50%;
            transform-origin: 100% center;
            background: $color-background;
            animation: rotate time(rotate) infinite linear;
            z-index: 2;
        }

        .tracker,
        .scale {
            transition: transform 0.15s linear;
        }

        &.active {
            .scale {
                transform: scale(1.15);
            }
        }

        &:hover {
            background: $color-hover;
        }
    }

    .line {
        height: 100%;
        transform: rotatez(angle(line));

        &::after,
        &::before {
            @extend %flex-3D;
            position: absolute;
        }

        &::after,
        &::before {
            content: '';
            background: $color-background;
            width: size(space);
            height: 100%;
        }

        &::after {
            transform: rotatez(angle(theta));
        }
    }

    .eye {
        width: $size-eye;
        height: $size-eye;
        background: $color-background;
        border-radius: 100% 0;
        border: calc($size-eye * 0.025) solid $color-stroke;
        transform: rotatez(45deg);
    }

    .sun {
        @include pseudos;

        animation: rotate time(rotate) infinite linear;

        &,
        &::after,
        &::before {
            height: $size-sun;
            width: $size-sun;
            position: absolute;
            border-radius: 50%;
        }

        &::before {
            transform: scale(0.9);
            background: linear-gradient(
                to left,
                $color-background 0% 50%,
                $color-fill 50% 100%
            );
        }

        &::after {
            content: '';
            border: calc($size-sun * 1.618 * 0.05) solid $color-fill;
            border-left-color: $color-background;
            border-top-color: $color-background;
            transform: rotatez(-45deg);
        }
    }

    .ray {
        &::after,
        &::before {
            content: '';
            position: absolute;
            height: $size-ray;
            width: calc($size-ray * 0.35);
            border-bottom-left-radius: 50%;
            border-bottom-right-radius: 50%;
            background: $color-background;
            border: calc($size-ray * 0.1) solid $color-fill;
        }

        &::before {
            background: $color-fill;
            transform: rotatez(angle(ray)) translatey($size-gap);
        }

        &::after {
            transform: rotatez(calc(angle(ray) + 180deg)) translatey($size-gap);
        }

        &:first-child {
            &:before {
                background: linear-gradient(
                    to right,
                    $color-fill 0% 50%,
                    $color-background 50% 100%
                );
            }

            &::after {
                background: linear-gradient(
                    to left,
                    $color-fill 0% 50%,
                    $color-background 50% 100%
                );
            }
        }
    }
}
